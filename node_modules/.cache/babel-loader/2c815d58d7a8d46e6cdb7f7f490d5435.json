{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/atuln/Brogramming/movie-searcher/src/components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nfunction Signup() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    signup\n  } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false); //submit handler\n\n  async function handleSubmit(e) {\n    e.preventDefault(); //check if passwords are matching\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError('Passwords do not match');\n    }\n\n    try {\n      setError('');\n      setLoading(true);\n      await signup(emailRef.current.value, passwordRef.current.value);\n    } catch {\n      setError('Failed to create Account');\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"w-100 text-center mb-4\",\n      children: \" Movie Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \" Sign Up \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: [\" \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Email \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              ref: emailRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Password \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            id: \"password-confirm\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Password Confirmation \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              ref: passwordConfirmRef,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: loading,\n            className: \"w-100\",\n            type: \"submit\",\n            children: \" Sign Up \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: [\"Have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Signup, \"hLVJUn89L6bSYljoLxC63KeX8s0=\", false, function () {\n  return [useAuth];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/atuln/Brogramming/movie-searcher/src/components/Signup.js"],"names":["React","useRef","useState","Card","Form","Button","Alert","Link","useAuth","Signup","emailRef","passwordRef","passwordConfirmRef","signup","error","setError","loading","setLoading","handleSubmit","e","preventDefault","current","value"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react'\nimport {Card, Form, Button, Alert} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nimport {useAuth} from '../context/AuthContext'\n\nfunction Signup() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const {signup} = useAuth()\n    const[error, setError] = useState('')\n    const[loading, setLoading] = useState(false)\n\n    //submit handler\n    async function handleSubmit(e) {\n        e.preventDefault()\n        //check if passwords are matching\n        if (passwordRef.current.value !== passwordConfirmRef.current.value){\n            return setError('Passwords do not match') \n        }\n        try {\n            setError('')\n            setLoading(true)\n            await signup(emailRef.current.value, passwordRef.current.value)\n\n        } catch {\n            setError('Failed to create Account')\n        }\n        setLoading(false)\n        \n    }\n\n    return (\n        <>\n        <h1 className=\"w-100 text-center mb-4\" > Movie Search</h1>\n            <Card>\n               <Card.Body>\n                   <h2 className=\"text-center mb-4\"> Sign Up </h2>\n                   {error && <Alert variant=\"danger\"> {error}</Alert>}\n                   <Form onSubmit={handleSubmit}>\n                      \n                       <Form.Group id=\"email\">\n                           <Form.Label> Email </Form.Label>\n                           <Form.Control type=\"email\" ref={emailRef} required />\n                       </Form.Group>\n \n                       <Form.Group id=\"password\">\n                           <Form.Label> Password </Form.Label>\n                           <Form.Control type=\"password\" ref={passwordRef} required />\n                       </Form.Group>\n \n                       <Form.Group id=\"password-confirm\">\n                           <Form.Label> Password Confirmation </Form.Label>\n                           <Form.Control type=\"password\" ref={passwordConfirmRef} required />\n                       </Form.Group>\n                       <Button disabled={loading} className=\"w-100\"type=\"submit\"> Sign Up </Button>\n                   </Form>\n               </Card.Body>\n           </Card>\n            \n            <div className=\"w-100 text-center mt-2\">\n                Have an account? <Link to=\"/login\">Login</Link>\n            </div>\n            \n        </>\n    )\n}\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}